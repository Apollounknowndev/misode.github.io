use ::java::data::loot::LootFunction
use ::java::data::loot::LootPool
use ::java::data::loot::LootPoolEntry





// LOOT MODIFIERS





dispatch minecraft:resource[lootpatched:loot_modifier] to struct LootModifier {
	type: LootModifierType,
	targets: (
		#[id="loot_table"] string |
		[#[id="loot_table"] string] |
		struct {
			regex: #[regex_pattern] string
		}
	),
	...lootpatched:loot_modifier[[type]],
}

enum(string) LootModifierType {
	AddEntries = "lootpatched:add_entries",
	AddPools = "lootpatched:add_pools",
	ApplyFunction = "lootpatched:apply_function",
}

dispatch lootpatched:loot_modifier[lootpatched:add_entries] to struct {
	entries: [LootPoolEntry]
}

dispatch lootpatched:loot_modifier[lootpatched:add_pools] to struct {
	pools: [LootPool]
}

dispatch lootpatched:loot_modifier[lootpatched:apply_function] to struct {
	function: (LootFunction | [LootFunction])
}





// LOOT MODIFIERS





dispatch minecraft:loot_function[lootpatched:item_swap] to struct {
	items: struct ItemSwapMap {
		[#[id="item"] string]: #[id="item"] string,
	}
}
