use ::java::data::predicate::Predicate
use ::java::data::advancement::predicate::ItemPredicate
use ::java::data::advancement::predicate::LocationPredicate
use ::java::data::util::MinMaxBounds
use ::java::util::text::Text
use ::java::world::item::ItemStack





// EVENT TRIGGER





dispatch minecraft:resource[wikiful:event_trigger] to struct EventTrigger {
	type: EventTriggerType,
	...wikiful:event_trigger[[type]]
}

enum(string) EventTriggerType {
	AnyOf = "wikiful:any_of",
	DestroyBlock = "wikiful:destroy_block",
	HitBlock = "wikiful:hit_block",
	InventoryChanged = "wikiful:inventory_changed",
	LocationChanged = "wikiful:location_changed"
}

dispatch wikiful:event_trigger[wikiful:any_of] to struct {
	triggers: [EventTrigger]
}

dispatch wikiful:event_trigger[wikiful:destroy_block, wikiful:hit_block] to struct {
	condition?: Predicate,
	blocks?: (#[id(registry="block",tags="allowed")] string | [#[id="block"] string]),
	properties?: struct {
		[string]: string
	},
}

dispatch wikiful:event_trigger[wikiful:inventory_changed] to struct {
	condition?: Predicate,
	slots?: struct InventoryChangedSlots {
		/// Amount of empty slots.
		empty?: MinMaxBounds<int>,
		/// Amount of occupied slots.
		occupied?: MinMaxBounds<int>,
		/// Amount of slots that are a full stack.
		full?: MinMaxBounds<int>,
	},
	items?: [ItemPredicate],
}

dispatch wikiful:event_trigger[wikiful:location_changed] to struct {
	condition?: Predicate,
	location: LocationPredicate
}





// BODY ELEMENT





type BodyElement = (
	int |
	Text |
	struct {
		type: BodyElementType,
		...wikiful:body_element[[type]]
	}
)

enum(string) BodyElementType {
	Text = "wikiful:text",
	Item = "wikiful:item",
	Sprite = "wikiful:sprite",
	Empty = "wikiful:empty",
	HorizontalLine = "wikiful:horizontal_line"
}

dispatch wikiful:body_element[wikiful:text] to struct {
	contents: Text
}

dispatch wikiful:body_element[wikiful:item] to struct {
	item: ([ItemStack] @ 1.. | ItemStack),
	show_decorations?: boolean,
	show_slot?: boolean,
	centered?: boolean
}

dispatch wikiful:body_element[wikiful:sprite] to struct {
	sprite: string,
	texture_width: int @ 1..,
	texture_height: int @ 1..,
	scale?: float @ 0.001..1,
	centered?: boolean
}

dispatch wikiful:body_element[wikiful:empty] to struct {
	spacing: int @ 0..
}

dispatch wikiful:body_element[wikiful:horizontal_line] to struct {
	height?: int @ 1..,
	spacing?: int @ 0..,
	color? : #[color="hex_rgb"] string
}





// ACTUAL DATA-DRIVEN STUFF





dispatch minecraft:resource[wikiful:tip] to struct Tip {
	trigger: EventTrigger,
	sprite?: #[id="wikiful:tip_background"] string,
	width?: int @ 1..,
	padding?: int @ 0..,
	display_time_multiplier?: float @ 0.01..,
	body: [BodyElement]
}

dispatch minecraft:resource[wikiful:category] to struct Category {
	title: Text,
	external_title?: Text,
	pages?: (#[id(registry="wikiful:page",tags="allowed")] string | [#[id="wikiful:page"] string]),
	categories?: (#[id(registry="wikiful:category",tags="allowed")] string | [#[id="wikiful:category"] string]),
	show_if_empty?: boolean
}

dispatch minecraft:resource[wikiful:page] to struct Page {
	type: enum(string) PageType {
		Base = "wikiful:base"
	},
	trigger?: EventTrigger,
	title: Text,
	show_on_main_page?: boolean,
	sprites?: struct PageSprites {
		background?: #[id] string
	},
	opener: [BodyElement],
	sections: [struct SectionInternal {
		title: Text,
		body: [BodyElement]
	}]
}

dispatch minecraft:resource[wikiful:section] to struct SectionExternal {
	parent: #[id="wikiful:page"] string,
	trigger?: EventTrigger,
	visibility?: Visibility,
	title: Text,
	body: [BodyElement]
}

enum(string) Visibility {
	Visible = "visible",
	LockedContents = "locked_contents",
	LockedAll = "locked_all",
	Invisible = "invisible"
}
